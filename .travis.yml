jobs:
  include:

    - stage: Install and CLI test
      language: python
      python: "3.6"
      install:
        - "python setup.py install"
      script:
        - dynaconf init -v FOO=running_on_travis -y
        - dynaconf write toml -v OTHERVALUE=Hello_Travis -y
        - dynaconf list | grep -c running_on_travis
        - dynaconf list | grep -c Hello_Travis
        - dynaconf --version

    - stage: Python 3.4
      language: python
      python: "3.4"
      env:
        - DYNACONF_SETTINGS=dynaconf.test_settings
        - DOTENV_PATH_FOR_DYNACONF=/home/travis/build/rochacbruno/dynaconf/.env
        - DYNATRAVIS_ENV_BOOLEAN='@bool true'
        - DYNATRAVIS_ENV_INT='@int 42'
        - DYNATRAVIS_ENV_FLOAT='@float 42.2'
        - DYNATRAVIS_ENV_LIST='@json ["dyna", "conf"]'
        # - DYNATRAVIS_ENV_DICT='@json {"dyna": "conf"}' how to fix this?
        - DYNATRAVIS_ENV_DICT='@json {}'
        - DYNATRAVIS_ENV_PURE_INT=42
        - DYNATRAVIS_ENV_STR_INT="'42'"
        - OTHER_TESTING='@bool yes'
        - OTHER_ENABLED=true
        - OTHER_DISABLED=false
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      script: make test

    - stage: Python 3.5
      language: python
      python: "3.5"
      env:
        - DYNACONF_SETTINGS=dynaconf.test_settings
        - DOTENV_PATH_FOR_DYNACONF=/home/travis/build/rochacbruno/dynaconf/.env
        - DYNATRAVIS_ENV_BOOLEAN='@bool true'
        - DYNATRAVIS_ENV_INT='@int 42'
        - DYNATRAVIS_ENV_FLOAT='@float 42.2'
        - DYNATRAVIS_ENV_LIST='@json ["dyna", "conf"]'
        # - DYNATRAVIS_ENV_DICT='@json {"dyna": "conf"}' how to fix this?
        - DYNATRAVIS_ENV_DICT='@json {}'
        - DYNATRAVIS_ENV_PURE_INT=42
        - DYNATRAVIS_ENV_STR_INT="'42'"
        - OTHER_TESTING='@bool yes'
        - OTHER_ENABLED=true
        - OTHER_DISABLED=false
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      script: make test

    - stage: Python 3.7
      language: python
      python: "3.7"
      dist: xenial
      sudo: yes
      env:
        - DYNACONF_SETTINGS=dynaconf.test_settings
        - DOTENV_PATH_FOR_DYNACONF=/home/travis/build/rochacbruno/dynaconf/.env
        - DYNATRAVIS_ENV_BOOLEAN='@bool true'
        - DYNATRAVIS_ENV_INT='@int 42'
        - DYNATRAVIS_ENV_FLOAT='@float 42.2'
        - DYNATRAVIS_ENV_LIST='@json ["dyna", "conf"]'
        # - DYNATRAVIS_ENV_DICT='@json {"dyna": "conf"}' how to fix this?
        - DYNATRAVIS_ENV_DICT='@json {}'
        - DYNATRAVIS_ENV_PURE_INT=42
        - DYNATRAVIS_ENV_STR_INT="'42'"
        - OTHER_TESTING='@bool yes'
        - OTHER_ENABLED=true
        - OTHER_DISABLED=false
      before_script:
        - sleep 5
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      script: make test

    - stage: Python 3.6 with coverage
      language: python
      python: "3.6"
      env:
        - DYNACONF_SETTINGS=dynaconf.test_settings
        - DOTENV_PATH_FOR_DYNACONF=/home/travis/build/rochacbruno/dynaconf/.env
        - DYNATRAVIS_ENV_BOOLEAN='@bool true'
        - DYNATRAVIS_ENV_INT='@int 42'
        - DYNATRAVIS_ENV_FLOAT='@float 42.2'
        - DYNATRAVIS_ENV_LIST='@json ["dyna", "conf"]'
        # - DYNATRAVIS_ENV_DICT='@json {"dyna": "conf"}' how to fix this?
        - DYNATRAVIS_ENV_DICT='@json {}'
        - DYNATRAVIS_ENV_PURE_INT=42
        - DYNATRAVIS_ENV_STR_INT="'42'"
        - OTHER_TESTING='@bool yes'
        - OTHER_ENABLED=true
        - OTHER_DISABLED=false
      before_script:
        - sleep 5
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      script: make test
      after_success:
        - codecov

    - stage: Examples and Frameworks
      language: python
      python: 3.6
      env:
        DEBUG_LEVEL_FOR_DYNACONF=DEBUG
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      script: make test_examples

    - stage: Vault
      language: python
      services:
        - docker
      before_install:
        - docker pull vault
        - docker run -d -e 'VAULT_DEV_ROOT_TOKEN_ID=myroot' -p 8200:8200 vault
        - docker ps -a
      python: 3.6
      env:
        VAULT_ENABLED_FOR_DYNACONF=1
        VAULT_TOKEN_FOR_DYNACONF=myroot
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      before_script:
        - sleep 5
      script: make test_vault

    - stage: Redis
      language: python
      services:
        - docker
      before_install:
        - docker pull redis
        - docker run -d -p 6379:6379 redis
        - docker ps -a
      python: 3.6
      env:
        REDIS_ENABLED_FOR_DYNACONF=1
      install:
        - "pip install --upgrade pip"
        - "pip install --upgrade -r requirements_dev.txt"
      before_script:
        - sleep 5
      script: make test_redis
